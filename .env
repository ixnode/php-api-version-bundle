###> General Config / Docker Compose Settings ###

# https://docs.docker.com/compose/reference/envvars/#compose_project_name
COMPOSE_PROJECT_NAME=de_ixnode_php_api_version_bundle

# ARM64V8 name
ARM64V8=arm64v8

# a) Either ARM64V8 image add (for non Mac arm processors)
IMAGE_ADD=

# b) Or ARM64V8 image add (for Mac arm processors)
#IMAGE_ADD="${ARM64V8}/"

# Namespace of this project
NAMESPACE=de.ixnode.php.api.version.bundle

# Namespace of this project (development)
NAMESPACE_DEVELOPMENT=${NAMESPACE}.development

# Namespace to use for host name variables (hostname safe)
NAMESPACE_HOSTNAME=de-ixnode-php-api-version-bundle

# Namespace to use for host name variables (hostname safe) (development)
NAMESPACE_HOSTNAME_DEVELOPMENT=${NAMESPACE_HOSTNAME}-development

# Namespace to use for host name variables (hostname safe)
NAMESPACE_UNDERLINE=de_ixnode_php_api_version_bundle

# Namespace to use for host name variables (hostname safe) (development)
NAMESPACE_HOSTNAME_UNDERLINE=${NAMESPACE_UNDERLINE}_development

# Namespace of app image
IMAGE_APP=ixnode/php-api-version/${IMAGE_ADD}app

# Namespace of app image (development)
IMAGE_PHP=ixnode/php-api-version/${IMAGE_ADD}php

# Namespace of nginx image
IMAGE_NGINX=ixnode/php-api-version/${IMAGE_ADD}nginx

# Namespace of mysql image
IMAGE_MYSQL=${IMAGE_ADD}mysql:8.0.31

IMAGE_ADMINER=${IMAGE_ADD}adminer:4.8.1

# The general URL of this project
URL_PRODUCTION=php-api-version-bundle.ixnode.de

# The local URL of this project
URL_LOCAL=api-version.localhost

# htpasswd -nbm ixno Omaderisave483 (do not use $$ on old composer version)
GENERAL_BASICAUTH_PRODUCTION='ixno:$apr1$5JvcxkWC$iA7cBjSG3xTSO/Y/dsHZt/'

# Version of this app
VERSION_APP=0.1.1

# Version of nginx image
VERSION_NGINX=0.1.0

# Version of php image
VERSION_PHP=0.1.0

# Version of this app
VERSION_APP_LATEST=latest

# Set UID and GID
UID=${UID}
GID=${GID}

# Traefik network name (local)
NETWORK_NAME_TRAEFIK_PUBLIC_LOCAL=traefik

# Traefik network name (public)
NETWORK_NAME_TRAEFIK_PUBLIC_PRODUCTION=traefik-public

# https port
PORT_HTTPS=443

# Internal docker adminer http port
PORT_HTTP_ADMINER_INTERNAL=8080

# Internal docker mailhog http port
PORT_HTTP_MAILHOG_INTERNAL=8025

# Internal docker mailhog smtp port
PORT_SMTP_MAILHOG_INTERNAL=1025

# Expose api https port (To bypass the Traefik proxy or if it is not installed)
PORT_HTTPS_API_EXPOSE=44443

# Expose adminer http port (To bypass the Traefik proxy or if it is not installed)
PORT_HTTP_ADMINER_EXPOSE=8081

# Expose mailhog http port (To bypass the Traefik proxy or if it is not installed)
PORT_HTTP_MAILHOG_EXPOSE=8082

# Expose mailhog smtp port (To bypass the Traefik proxy or if it is not installed)
PORT_SMTP_MAILHOG_EXPOSE=1025

###< General Config / Docker Compose Settings ###

###> symfony/framework-bundle ###
APP_ENV=dev
APP_DEBUG=1
APP_SECRET=3b337448a0100c94f60efc26437e0a57
###< symfony/framework-bundle ###

###> PHP Configuration ###
DOCKERFILE_PHP_FPM=php-fpm.dockerfile
DOCKERFILE_NGINX=nginx.dockerfile
PHP_VERSION=8.1.11
PHP_VERSION_HOSTNAME=8-1-11
###< PHP Configuration ###

###> Docker Configuration: MySQL secrets and configurations
MYSQL_SERVER_ROOT_USER=root
MYSQL_SERVER_ROOT_PASSWORD=secret-pass
MYSQL_SERVER_DB=hdb
MYSQL_SERVER_DB_TEST=hdb-test
MYSQL_SERVER_PORT=3306
MYSQL_SERVER_VERSION=8.0
MYSQL_SERVER_DRIVER=pdo_mysql
###< Docker Configuration: MySQL secrets and configurations

###> Docker Configuration: Mail secrets and configurations
MAIL_SERVER_TRANSPORT=smtp
MAIL_SERVER_HOST=localhost
#MAIL_SERVER_HOST=${NAMESPACE_HOSTNAME_DEVELOPMENT}-mailhog
MAIL_SERVER_PORT=1025
###< Docker Configuration: Mail secrets and configurations

###> Docker Configuration: General configurations
# Attention for EXPOSE_MYSQL_PORT: Please also make changes to the DOCTRINE_DB_PORT variable.
EXPOSE_MYSQL_PORT=3336
EXPOSE_MYSQL_PORT_TEST=3337
###< Docker Configuration: General configurations

##> doctrine/doctrine-bundle (mysql) ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
DOCTRINE_DB_DRIVER=${MYSQL_SERVER_DRIVER}
DOCTRINE_DB_VERSION=${MYSQL_SERVER_VERSION}
DOCTRINE_DB_PATH=
DOCTRINE_DB_NAME=${MYSQL_SERVER_DB}
DOCTRINE_DB_HOST=${ENV_DB_HOST:-127.0.0.1}
# Workaround for default port for DOCTRINE_DB_PORT: Because ${ENV_DB_PORT:-${EXPOSE_MYSQL_PORT}} does not work
DOCTRINE_DB_PORT=${ENV_DB_PORT:-3336}
DOCTRINE_DB_USER=${MYSQL_SERVER_ROOT_USER}
DOCTRINE_DB_PASS=${MYSQL_SERVER_ROOT_PASSWORD}
DOCTRINE_DB_SSL_CA=
DOCTRINE_DB_SSL_VERIFY_SERVER_CERT=false
DOCTRINE_DB_INIT_COMMAND="SET NAMES utf8"
###< doctrine/doctrine-bundle (mysql) ###

##> doctrine/doctrine-bundle (mysql) ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
DOCTRINE_DB_DRIVER_SQLITE=${MYSQL_SERVER_DRIVER}
DOCTRINE_DB_VERSION_SQLITE=${MYSQL_SERVER_VERSION}
DOCTRINE_DB_PATH_SQLITE=
DOCTRINE_DB_NAME_SQLITE=${MYSQL_SERVER_DB}
DOCTRINE_DB_HOST_SQLITE=${ENV_DB_HOST:-127.0.0.1}
# Workaround for default port for DOCTRINE_DB_PORT: Because ${ENV_DB_PORT:-${EXPOSE_MYSQL_PORT}} does not work
DOCTRINE_DB_PORT_SQLITE=${ENV_DB_PORT:-3336}
DOCTRINE_DB_USER_SQLITE=${MYSQL_SERVER_ROOT_USER}
DOCTRINE_DB_PASS_SQLITE=${MYSQL_SERVER_ROOT_PASSWORD}
DOCTRINE_DB_SSL_CA_SQLITE=
DOCTRINE_DB_SSL_VERIFY_SERVER_CERT_SQLITE=false
DOCTRINE_DB_INIT_COMMAND_SQLITE="SET NAMES utf8"
###< doctrine/doctrine-bundle (mysql) ###

###> own variables ###
PROJECT_NAME="PHP Api Version Bundle"
PROJECT_DESCRIPTION="Provides the base API plattform functionality."
API_BASE_URL=/api/v1
API_COUNTRY_CODE=de_DE
###< own variables ###

###> table-dumper (local docker settings) ###
MYSQLDUMP_DATABASE_URL=mysql://root:secret-pass@127.0.0.1:3336/hdb?serverVersion=8.0
MYSQLDUMP_IGNORED_TABLES=
#MYSQLDUMP_FILTERED_TABLES=
#MYSQLDUMP_TABLES_NO_DATA=
#MYSQLDUMP_TABLES_ONLY_DATA=
###< table-dumper (local docker settings) ###

###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN='^https?://(php-api-version-bundle.ixnode.de|api-version.localhost|localhost|127\.0\.0\.1)(:[0-9]+)?$'
###< nelmio/cors-bundle ###

###> symfony/mailer ###
MAILER_DSN=smtp://localhost:1025
###< symfony/mailer ###
